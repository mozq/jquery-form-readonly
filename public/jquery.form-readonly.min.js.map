{"version":3,"sources":["jquery.form-readonly.js"],"names":["$","excludesElement","settings","$elm","hasClass","is","includesReadonly","prop","includesDisabled","closest","length","excludes","inputToReadonly","$elms","each","this","type","toLowerCase","len","passwordMaskLength","val","toReadonlyElement","str","count","s","i","repeat","passwordMaskChar","$label","id","attr","$parentLabel","findLabel","useLabel","showLabel","$target","addClass","hide","show","toReadonlyLabel","files","$names","name","normalize","sep","multipleSeparator","clone","append","textareaToReadonly","selectToReadonly","$labels","find","$opt","label","text","newElm","css","after","display","data","removeData","content","fn","formReadonly","options","extend","defaults","filter","removeClass","remove","jQuery"],"mappings":"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","file":"jquery.form-readonly.min.js","sourcesContent":["'use strict';\n(function ($) {\n  $.fn.formReadonly = function(options) {\n    var readonly = !(typeof options === 'boolean' && !options);\n    \n    if (readonly) {\n      var settings = $.extend({}, $.fn.formReadonly.defaults, options);\n      \n      inputToReadonly(settings, this.filter('input'));\n      textareaToReadonly(settings, this.filter('textarea'));\n      selectToReadonly(settings, this.filter('select'));\n      \n      inputToReadonly(settings, this.find('input'));\n      textareaToReadonly(settings, this.find('textarea'));\n      selectToReadonly(settings, this.find('select'));\n    } else {\n      show(this.filter('.formreadonly-origin')).removeClass('formreadonly-origin');\n      this.filter('.formreadonly-ro-value').remove();\n      show(this.filter('.formreadonly-ro-label')).removeClass('formreadonly-ro-label');\n      \n      show(this.find('.formreadonly-origin')).removeClass('formreadonly-origin');\n      this.find('.formreadonly-ro-value').remove();\n      show(this.find('.formreadonly-ro-label')).removeClass('formreadonly-ro-label');\n    }\n    \n    return this;\n  };\n  \n  $.fn.formReadonly.defaults = {\n    multipleSeparator: ', ', // for multiple\n    passwordMaskChar: '*', // for password\n    passwordMaskLength: -1, // for password\n    useLabel: false, // for checkbox, radio\n    includesReadonly: false,\n    includesDisabled: false,\n    excludes: null, // function ($elm) { return false; },\n  };\n  \n  \n  function excludesElement(settings, $elm) {\n    if ($elm.hasClass('formreadonly-origin')) {\n      return true;\n    }\n    \n    if ($elm.hasClass('formreadonly-ro-value')) {\n      return true;\n    }\n    \n    if ($elm.is(':hidden')) {\n      return true;\n    }\n    \n    if (!settings.includesReadonly) {\n      if ($elm.prop('readonly')) {\n        return true;\n      }\n    }\n    \n    if (!settings.includesDisabled) {\n      if ($elm.prop('disabled')) {\n        return true;\n      }\n      \n      if (0 < $elm.closest('.disabled').length) {\n        // for Bootstrap\n        return true;\n      }\n    }\n    \n    if (settings.excludes && settings.excludes($elm)) {\n      return true;\n    }\n    \n    return false;\n  }\n  \n  \n  function inputToReadonly(settings, $elms) {\n    $elms.each(function () {\n      var $elm = $(this);\n      \n      if (excludesElement(settings, $elm)) {\n        return;\n      }\n      \n      var type = $elm.prop('type').toLowerCase();\n      if (type === 'password') {\n        var len = (0 <= settings.passwordMaskLength) ? settings.passwordMaskLength : $elm.val().length;\n        var masked = repeat(settings.passwordMaskChar, len);\n        \n        toReadonlyElement($elm, masked);\n      } else if (type === 'radio' || type === 'checkbox') {\n        var $label = findLabel($elm);\n        if (settings.useLabel && $label !== null) {\n          toReadonlyLabel($elm, $label, $elm.prop('checked'));\n        } else {\n          var $dispElm = $('<input>')\n              .attr('type', type)\n              .prop('checked', $elm.prop('checked'))\n              .prop('disabled', true);\n          toReadonlyElement($elm, $dispElm);\n        }\n      } else if (type === 'file') {\n        var files = $elm.prop('files');\n        \n        var $names = $('<span>');\n        for (var i = 0; i < files.length; i++) {\n          var name = files[i].name;\n          if (name.normalize) {\n            name = name.normalize('NFC');\n          }\n          \n          if (0 < i) {\n            var sep = settings.multipleSeparator;\n            if (sep instanceof $) {\n              sep = sep.clone();\n            }\n            append($names, sep);\n          }\n          \n          append($names, name);\n        }\n        \n        toReadonlyElement($elm, $names);\n      } else if (type === 'hidden') {\n        // NOP\n      } else if (type === 'button' || type === 'submit' || type === 'image' || type === 'reset') {\n        // NOP\n      } else {\n        toReadonlyElement($elm, $elm.val());\n      }\n    });\n  }\n  \n  function textareaToReadonly(settings, $elms) {\n    $elms.each(function () {\n      var $elm = $(this);\n      \n      if (excludesElement(settings, $elm)) {\n        return;\n      }\n      \n      toReadonlyElement($elm, $elm.val());\n    });\n  }\n  \n  function selectToReadonly(settings, $elms) {\n    $elms.each(function () {\n      var $elm = $(this);\n      \n      if (excludesElement(settings, $elm)) {\n        return;\n      }\n      \n      var $labels = $('<span>');\n      $elm.find('option:selected').each(function (i) {\n        var $opt = $(this);\n        \n        var label = $opt.attr('label');\n        if (!label) {\n          label = $opt.text();\n        }\n        \n        if (0 < i) {\n          var sep = settings.multipleSeparator;\n          if (sep instanceof $) {\n            sep = sep.clone();\n          }\n          append($labels, sep);\n        }\n        append($labels, label);\n      });\n      \n      toReadonlyElement($elm, $labels);\n    });\n  }\n  \n  function toReadonlyElement($elm, newElm) {\n    $elm.addClass('formreadonly-origin');\n    hide($elm);\n\n    if (typeof newElm === 'string') {\n      newElm = $('<span>')\n          .css('white-space', 'pre')\n          .text(newElm);\n    }\n    \n    newElm = $('<span>').addClass('formreadonly-ro-value').append(newElm);\n    $elm.after(newElm);\n  }\n  \n  function toReadonlyLabel($elm, $label, showLabel) {\n    var $target = $elm.closest('.form-check'); // for Bootstrap\n    if ($target.length === 0) {\n      $target = $label;\n    }\n    \n    $elm.addClass('formreadonly-origin');\n    hide($elm);\n    \n    $target.addClass('formreadonly-ro-label');\n    if (showLabel) {\n      show($target);\n    } else {\n      hide($target);\n    }\n  }\n  \n  function findLabel($elm) {\n    var id = $elm.attr('id');\n    if (id) {\n      var $label = $('label[for=\"' + id + '\"]');\n      if ($label.length) {\n        return $label;\n      }\n    }\n    \n    var $parentLabel = $elm.closest('label');\n    if ($parentLabel.length) {\n      return $parentLabel;\n    }\n    \n    return null;\n  }\n  \n  function hide($elms) {\n    $elms.each(function () {\n      var $elm = $(this);\n      \n      var display = $elm.css('display');\n      if (!display) {\n        display = '';\n      }\n      $elm.data('formreadonly-prev-display', display);\n      $elm.css('display', 'none');\n    });\n    \n    return $elms;\n  }\n  \n  function show($elms) {\n    $elms.each(function () {\n      var $elm = $(this);\n      \n      var display = $elm.data('formreadonly-prev-display');\n      if (!display) {\n        display = '';\n      }\n      $elm.css('display', display);\n      $elm.removeData('formreadonly-prev-display');\n    });\n    \n    return $elms;\n  }\n  \n  function append($elm, content) {\n    if (!content) {\n      // NOP\n    } else if (typeof content === 'string') {\n      $elm.append($(\"<span>\").text(content));\n    } else {\n      $elm.append(content);\n    }\n    \n    return $elm;\n  }\n  \n  function repeat(str, count) {\n    var s = '';\n    for (var i = 0; i < count; i++) {\n      s += str;\n    }\n    return s;\n  }\n})(jQuery);\n"]}